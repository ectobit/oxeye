name: pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  check:
    uses: ectobit/reusable-workflows/.github/workflows/go-check.yaml@main
    with:
      lint-command: make lint
      test-command: make test
  # test: # example how nats may be used for real testing
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   container: golang:1.17.5
  #   services:
  #     postgres:
  #       image: postgres:14-alpine
  #       env:
  #         POSTGRES_PASSWORD: arc
  #         POSTGRES_DB: test
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v3
  #     - name: Set up dependencies
  #       run: |
  #         apt-get update && apt-get install -y postgresql-client-13
  #         curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar zx -C /usr/local/bin
  #     - name: Set up cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/go/pkg/mod
  #         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #         restore-keys: |
  #           ${{ runner.os }}-go-
  #     - name: Run migrations
  #       env:
  #         PGPASSWORD: arc
  #       run: |
  #         psql -U postgres -h postgres -d test -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'
  #         migrate -path=migrations -database='postgres://postgres:arc@postgres/test?sslmode=disable&query' up
  #     - name: Test
  #       env:
  #         ARC_DB_HOST: postgres
  #       run: go test -race ./...
